// Code generated by protoc-gen-go.
// source: addons.proto
// DO NOT EDIT!

package messages

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type ResourceType int32

const (
	ResourceType_RType_BlockModel ResourceType = 1
	ResourceType_RType_Script     ResourceType = 2
)

var ResourceType_name = map[int32]string{
	1: "RType_BlockModel",
	2: "RType_Script",
}
var ResourceType_value = map[string]int32{
	"RType_BlockModel": 1,
	"RType_Script":     2,
}

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}
func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (x *ResourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResourceType_value, data, "ResourceType")
	if err != nil {
		return err
	}
	*x = ResourceType(value)
	return nil
}

type ChangedNetworkedVar struct {
	Name             *string `protobuf:"bytes,1,req" json:"Name,omitempty"`
	Json             *string `protobuf:"bytes,2,req" json:"Json,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChangedNetworkedVar) Reset()         { *m = ChangedNetworkedVar{} }
func (m *ChangedNetworkedVar) String() string { return proto.CompactTextString(m) }
func (*ChangedNetworkedVar) ProtoMessage()    {}

func (m *ChangedNetworkedVar) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ChangedNetworkedVar) GetJson() string {
	if m != nil && m.Json != nil {
		return *m.Json
	}
	return ""
}

type GetCLResources struct {
	CachedResourceHashes []*KeyValueStringPair `protobuf:"bytes,1,rep" json:"CachedResourceHashes,omitempty"`
	XXX_unrecognized     []byte                `json:"-"`
}

func (m *GetCLResources) Reset()         { *m = GetCLResources{} }
func (m *GetCLResources) String() string { return proto.CompactTextString(m) }
func (*GetCLResources) ProtoMessage()    {}

func (m *GetCLResources) GetCachedResourceHashes() []*KeyValueStringPair {
	if m != nil {
		return m.CachedResourceHashes
	}
	return nil
}

type GetCLResourcesResp struct {
	Resources        []*Resource `protobuf:"bytes,1,rep" json:"Resources,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *GetCLResourcesResp) Reset()         { *m = GetCLResourcesResp{} }
func (m *GetCLResourcesResp) String() string { return proto.CompactTextString(m) }
func (*GetCLResourcesResp) ProtoMessage()    {}

func (m *GetCLResourcesResp) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type KeyValueStringPair struct {
	Key              *string `protobuf:"bytes,1,req" json:"Key,omitempty"`
	Value            *string `protobuf:"bytes,2,req" json:"Value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *KeyValueStringPair) Reset()         { *m = KeyValueStringPair{} }
func (m *KeyValueStringPair) String() string { return proto.CompactTextString(m) }
func (*KeyValueStringPair) ProtoMessage()    {}

func (m *KeyValueStringPair) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *KeyValueStringPair) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Resource struct {
	Type             *ResourceType `protobuf:"varint,1,req,enum=messages.ResourceType" json:"Type,omitempty"`
	Name             *string       `protobuf:"bytes,2,req" json:"Name,omitempty"`
	Script           *string       `protobuf:"bytes,3,opt" json:"Script,omitempty"`
	Model            *BlockModel   `protobuf:"bytes,4,opt" json:"Model,omitempty"`
	ShouldExecSCript *bool         `protobuf:"varint,5,opt" json:"ShouldExecSCript,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}

func (m *Resource) GetType() ResourceType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ResourceType_RType_BlockModel
}

func (m *Resource) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Resource) GetScript() string {
	if m != nil && m.Script != nil {
		return *m.Script
	}
	return ""
}

func (m *Resource) GetModel() *BlockModel {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *Resource) GetShouldExecSCript() bool {
	if m != nil && m.ShouldExecSCript != nil {
		return *m.ShouldExecSCript
	}
	return false
}

type FortiaMessage struct {
	Name             *string `protobuf:"bytes,1,req" json:"Name,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req" json:"Data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FortiaMessage) Reset()         { *m = FortiaMessage{} }
func (m *FortiaMessage) String() string { return proto.CompactTextString(m) }
func (*FortiaMessage) ProtoMessage()    {}

func (m *FortiaMessage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FortiaMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("messages.ResourceType", ResourceType_name, ResourceType_value)
}
